/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.info API
 * Backend definition for ethtps.info; you\'re free to play around
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    TimedDataset,
    TimedDatasetFromJSON,
    TimedDatasetToJSON
} from '.'
import type { DataType, SimpleMultiDatasetAnalysis } from '../../../../api-client'
import {
    DataTypeFromJSON,
    DataTypeToJSON,
    SimpleMultiDatasetAnalysisFromJSON,
    SimpleMultiDatasetAnalysisToJSON,
    exists
} from '../../../../api-client'
/**
 *
 * @export
 * @interface L2DataResponseModel
 */
export interface TimedL2DataResponseModel {
    /**
     *
     * @type {Dataset}
     * @memberof L2DataResponseModel
     */
    data?: TimedDataset
    /**
     *
     * @type {Array<TimedDataset>}
     * @memberof L2DataResponseModel
     */
    datasets?: Array<TimedDataset> | null
    /**
     *
     * @type {SimpleMultiDatasetAnalysis}
     * @memberof L2DataResponseModel
     */
    simpleAnalysis?: SimpleMultiDatasetAnalysis
    /**
     *
     * @type {DataType}
     * @memberof L2DataResponseModel
     */
    dataType?: DataType
}

export function TimedL2DataResponseModelFromJSON(json: any): TimedL2DataResponseModel {
    return TimedL2DataResponseModelFromJSONTyped(json, false)
}

export function TimedL2DataResponseModelFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): TimedL2DataResponseModel {
    if (json === undefined || json === null) {
        return json
    }
    return {
        data: !exists(json, 'data') ? undefined : TimedDatasetFromJSON(json['data']),
        datasets: !exists(json, 'datasets')
            ? undefined
            : json['datasets'] === null
                ? null
                : (json['datasets'] as Array<any>).map(TimedDatasetFromJSON),
        simpleAnalysis: !exists(json, 'simpleAnalysis')
            ? undefined
            : SimpleMultiDatasetAnalysisFromJSON(json['simpleAnalysis']),
        dataType: !exists(json, 'dataType')
            ? undefined
            : DataTypeFromJSON(json['dataType'])
    }
}

export function TimedL2DataResponseModelToJSON(
    value?: TimedL2DataResponseModel | null
): any {
    if (value === undefined) {
        return undefined
    }
    if (value === null) {
        return null
    }
    return {
        data: TimedDatasetToJSON(value.data),
        datasets:
            value.datasets === undefined
                ? undefined
                : value.datasets === null
                    ? null
                    : (value.datasets as Array<any>).map(TimedDatasetToJSON),
        simpleAnalysis: SimpleMultiDatasetAnalysisToJSON(value.simpleAnalysis),
        dataType: DataTypeToJSON(value.dataType)
    }
}
